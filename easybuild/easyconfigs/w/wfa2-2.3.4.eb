easyblock = 'CMakeMake'

name = 'WFA2'
version = '2.3.4'

homepage = 'https://github.com/smarco/WFA2-lib'
whatis = [
    'Description: WFA-lib: Wavefront alignment algorithm library v2',
]
description = """
The wavefront alignment (WFA) algorithm is an exact gap-affine algorithm that
takes advantage of homologous regions between the sequences to accelerate the
alignment process. Unlike traditional dynamic programming algorithms that run
in quadratic time complexity, the WFA runs in time O(ns+s^2), proportional to
the sequence length n and the alignment score s, using O(s^2) memory (or O(s)
using the ultralow/BiWFA mode). Moreover, the WFA algorithm exhibits simple
computational patterns that the modern compilers can automatically vectorize
for different architectures without adapting the code. To intuitively illustrate
why the WFA algorithm is so interesting, look at the following figure. The left
panel shows the cells computed by a classical dynamic programming based algorithm
(like Smith-Waterman or Needleman Wunsch). In contrast, the right panel shows the
cells computed by the WFA algorithm to obtain the same result (i.e. the optimal alignment).
"""

toolchain = SYSTEM

source_urls = ['https://github.com/smarco/WFA2-lib/archive/refs/tags/']
sources = ['v%(version)s.tar.gz']
checksums = ['3a02d19b45c7efcdcabdd956421b1e449e771fca0b0f072e02d7aa65ebb29f23']

builddependencies = [
    ('binutils', '2.37'),
    ('cmake', '3.27.7'),
]

configopts = "-DOPENMP=ON"

sanity_check_paths = {
    'files': ['lib/libwfa2.a'],
    'dirs': ['include/wfa2lib'],
}

moduleclass = 'bio'
